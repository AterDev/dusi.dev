{
  "openapi": "3.0.1",
  "info": {
    "title": "dusi.dev",
    "description": "API 文档",
    "version": "v1"
  },
  "paths": {
    "/api/Auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/{id}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Logout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityLibrary/filter": {
      "post": {
        "tags": [
          "EntityLibrary"
        ],
        "operationId": "EntityLibrary_Filter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityLibraryFilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityLibraryFilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityLibraryFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibraryItemDtoPageList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibraryItemDtoPageList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibraryItemDtoPageList"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityLibrary": {
      "post": {
        "tags": [
          "EntityLibrary"
        ],
        "operationId": "EntityLibrary_Add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityLibraryAddDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityLibraryAddDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityLibraryAddDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityLibrary/{id}": {
      "put": {
        "tags": [
          "EntityLibrary"
        ],
        "operationId": "EntityLibrary_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityLibraryUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityLibraryUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityLibraryUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "EntityLibrary"
        ],
        "operationId": "EntityLibrary_GetDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EntityLibrary"
        ],
        "operationId": "EntityLibrary_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLibrary"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityMember/filter": {
      "post": {
        "tags": [
          "EntityMember"
        ],
        "operationId": "EntityMember_Filter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberFilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberFilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberItemDtoPageList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberItemDtoPageList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberItemDtoPageList"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityMember": {
      "post": {
        "tags": [
          "EntityMember"
        ],
        "operationId": "EntityMember_Add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberAddDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberAddDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberAddDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityMember/{id}": {
      "put": {
        "tags": [
          "EntityMember"
        ],
        "operationId": "EntityMember_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "EntityMember"
        ],
        "operationId": "EntityMember_GetDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EntityMember"
        ],
        "operationId": "EntityMember_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMember"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityMemberConstraint/filter": {
      "post": {
        "tags": [
          "EntityMemberConstraint"
        ],
        "operationId": "EntityMemberConstraint_Filter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberConstraintFilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberConstraintFilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberConstraintFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraintItemDtoPageList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraintItemDtoPageList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraintItemDtoPageList"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityMemberConstraint": {
      "post": {
        "tags": [
          "EntityMemberConstraint"
        ],
        "operationId": "EntityMemberConstraint_Add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberConstraintAddDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberConstraintAddDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberConstraintAddDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityMemberConstraint/{id}": {
      "put": {
        "tags": [
          "EntityMemberConstraint"
        ],
        "operationId": "EntityMemberConstraint_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberConstraintUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberConstraintUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityMemberConstraintUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "EntityMemberConstraint"
        ],
        "operationId": "EntityMemberConstraint_GetDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EntityMemberConstraint"
        ],
        "operationId": "EntityMemberConstraint_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityMemberConstraint"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityModel/filter": {
      "post": {
        "tags": [
          "EntityModel"
        ],
        "operationId": "EntityModel_Filter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModelFilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModelFilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModelFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelItemDtoPageList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelItemDtoPageList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelItemDtoPageList"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityModel": {
      "post": {
        "tags": [
          "EntityModel"
        ],
        "operationId": "EntityModel_Add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModelAddDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModelAddDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModelAddDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/EntityModel/{id}": {
      "put": {
        "tags": [
          "EntityModel"
        ],
        "operationId": "EntityModel_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModelUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModelUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModelUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "EntityModel"
        ],
        "operationId": "EntityModel_GetDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EntityModel"
        ],
        "operationId": "EntityModel_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/filter": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_Filter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleFilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleFilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleItemDtoPageList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleItemDtoPageList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleItemDtoPageList"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_Add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleAddDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleAddDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleAddDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/{id}": {
      "put": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_GetDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessModifier": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "访问修饰符",
        "format": "int32",
        "x-enumNames": [
          "Public",
          "Protected",
          "Internal"
        ]
      },
      "AuthResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "description": "用户名",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "description": "token",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CodeLanguage": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23
        ],
        "type": "integer",
        "description": "编程语言",
        "format": "int32",
        "x-enumNames": [
          "Csharp",
          "Fsharp",
          "Java",
          "Php",
          "Python",
          "Kotlin",
          "Swift",
          "Typescript",
          "Javascript",
          "Html",
          "Css",
          "Dart",
          "Rust",
          "Cpp",
          "Golang",
          "Node",
          "Deno",
          "Markdown",
          "Text",
          "Shell",
          "Powershell",
          "Json",
          "Xml",
          "Else"
        ]
      },
      "EntityLibrary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "库名称",
            "nullable": true
          },
          "description": {
            "maxLength": 200,
            "type": "string",
            "description": "库描述",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "description": "是否公开"
          },
          "entityModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityModel"
            },
            "description": "包含的实体类",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false,
        "description": "实体库"
      },
      "EntityLibraryAddDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 200,
            "type": "string",
            "description": "库描述",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "description": "是否公开"
          }
        },
        "additionalProperties": false,
        "description": "实体库添加时请求结构"
      },
      "EntityLibraryFilterDto": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBy": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "description": "排序",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "description": "是否公开",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "实体库查询筛选"
      },
      "EntityLibraryItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 200,
            "type": "string",
            "description": "库描述",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "description": "是否公开"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          }
        },
        "additionalProperties": false,
        "description": "实体库列表元素"
      },
      "EntityLibraryItemDtoPageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityLibraryItemDto"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EntityLibraryUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 200,
            "type": "string",
            "description": "库描述",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "description": "是否公开",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "实体库更新时请求结构"
      },
      "EntityMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "属性名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "属性注释内容",
            "nullable": true
          },
          "defaultValue": {
            "maxLength": 100,
            "type": "string",
            "description": "默认值，根据类型推断",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "isRequired": {
            "type": "boolean",
            "description": "是否必须"
          },
          "isEnum": {
            "type": "boolean",
            "description": "是否为枚举"
          },
          "isList": {
            "type": "boolean",
            "description": "是否为列表"
          },
          "isObject": {
            "type": "boolean",
            "description": "是否为自定义对象"
          },
          "canSet": {
            "type": "boolean",
            "description": "是否可赋值"
          },
          "needInit": {
            "type": "boolean",
            "description": "是否要初始化"
          },
          "dictionaryKeyType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "dictionaryValueType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "constraint": {
            "$ref": "#/components/schemas/EntityMemberConstraint"
          },
          "objectType": {
            "$ref": "#/components/schemas/EntityModel"
          },
          "objectTypeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "entityModel": {
            "$ref": "#/components/schemas/EntityModel"
          }
        },
        "additionalProperties": false,
        "description": "实体属性"
      },
      "EntityMemberAddDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "属性名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "属性注释内容",
            "nullable": true
          },
          "defaultValue": {
            "maxLength": 100,
            "type": "string",
            "description": "默认值，根据类型推断",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "isRequired": {
            "type": "boolean",
            "description": "是否必须"
          },
          "isEnum": {
            "type": "boolean",
            "description": "是否为枚举"
          },
          "isList": {
            "type": "boolean",
            "description": "是否为列表"
          },
          "isObject": {
            "type": "boolean",
            "description": "是否为自定义对象"
          },
          "canSet": {
            "type": "boolean",
            "description": "是否可赋值"
          },
          "needInit": {
            "type": "boolean",
            "description": "是否要初始化"
          },
          "dictionaryKeyType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "dictionaryValueType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "objectTypeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "constraintId": {
            "type": "string",
            "format": "uuid"
          },
          "entityModelId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "实体属性添加时请求结构"
      },
      "EntityMemberConstraint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          },
          "maxLength": {
            "type": "integer",
            "description": "字符串最长长度",
            "format": "int32",
            "nullable": true
          },
          "minLength": {
            "type": "integer",
            "description": "字符串最短长度",
            "format": "int32",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "description": "固定长度",
            "format": "int32",
            "nullable": true
          },
          "min": {
            "type": "integer",
            "description": "数值最小",
            "format": "int32",
            "nullable": true
          },
          "max": {
            "type": "integer",
            "description": "数值最大",
            "format": "int64",
            "nullable": true
          },
          "entityMember": {
            "$ref": "#/components/schemas/EntityMember"
          },
          "entityMemberId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "属性的约束"
      },
      "EntityMemberConstraintAddDto": {
        "type": "object",
        "properties": {
          "maxLength": {
            "type": "integer",
            "description": "字符串最长长度",
            "format": "int32",
            "nullable": true
          },
          "minLength": {
            "type": "integer",
            "description": "字符串最短长度",
            "format": "int32",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "description": "固定长度",
            "format": "int32",
            "nullable": true
          },
          "min": {
            "type": "integer",
            "description": "数值最小",
            "format": "int32",
            "nullable": true
          },
          "max": {
            "type": "integer",
            "description": "数值最大",
            "format": "int64",
            "nullable": true
          },
          "entityMemberId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "属性的约束添加时请求结构"
      },
      "EntityMemberConstraintFilterDto": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBy": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "description": "排序",
            "nullable": true
          },
          "entityMemberId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "属性的约束查询筛选"
      },
      "EntityMemberConstraintItemDto": {
        "type": "object",
        "properties": {
          "maxLength": {
            "type": "integer",
            "description": "字符串最长长度",
            "format": "int32",
            "nullable": true
          },
          "minLength": {
            "type": "integer",
            "description": "字符串最短长度",
            "format": "int32",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "description": "固定长度",
            "format": "int32",
            "nullable": true
          },
          "min": {
            "type": "integer",
            "description": "数值最小",
            "format": "int32",
            "nullable": true
          },
          "max": {
            "type": "integer",
            "description": "数值最大",
            "format": "int64",
            "nullable": true
          },
          "entityMemberId": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          }
        },
        "additionalProperties": false,
        "description": "属性的约束列表元素"
      },
      "EntityMemberConstraintItemDtoPageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityMemberConstraintItemDto"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EntityMemberConstraintUpdateDto": {
        "type": "object",
        "properties": {
          "maxLength": {
            "type": "integer",
            "description": "字符串最长长度",
            "format": "int32",
            "nullable": true
          },
          "minLength": {
            "type": "integer",
            "description": "字符串最短长度",
            "format": "int32",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "description": "固定长度",
            "format": "int32",
            "nullable": true
          },
          "min": {
            "type": "integer",
            "description": "数值最小",
            "format": "int32",
            "nullable": true
          },
          "max": {
            "type": "integer",
            "description": "数值最大",
            "format": "int64",
            "nullable": true
          },
          "entityMemberId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "属性的约束更新时请求结构"
      },
      "EntityMemberFilterDto": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBy": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "description": "排序",
            "nullable": true
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "属性名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "属性注释内容",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "isRequired": {
            "type": "boolean",
            "description": "是否必须",
            "nullable": true
          },
          "isEnum": {
            "type": "boolean",
            "description": "是否为枚举",
            "nullable": true
          },
          "isList": {
            "type": "boolean",
            "description": "是否为列表",
            "nullable": true
          },
          "isObject": {
            "type": "boolean",
            "description": "是否为自定义对象",
            "nullable": true
          },
          "canSet": {
            "type": "boolean",
            "description": "是否可赋值",
            "nullable": true
          },
          "needInit": {
            "type": "boolean",
            "description": "是否要初始化",
            "nullable": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "constraintId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "objectTypeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "entityModelId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "实体属性查询筛选"
      },
      "EntityMemberItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "属性名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "属性注释内容",
            "nullable": true
          },
          "defaultValue": {
            "maxLength": 100,
            "type": "string",
            "description": "默认值，根据类型推断",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "isRequired": {
            "type": "boolean",
            "description": "是否必须"
          },
          "isEnum": {
            "type": "boolean",
            "description": "是否为枚举"
          },
          "isList": {
            "type": "boolean",
            "description": "是否为列表"
          },
          "isObject": {
            "type": "boolean",
            "description": "是否为自定义对象"
          },
          "canSet": {
            "type": "boolean",
            "description": "是否可赋值"
          },
          "needInit": {
            "type": "boolean",
            "description": "是否要初始化"
          },
          "dictionaryKeyType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "dictionaryValueType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "objectTypeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          }
        },
        "additionalProperties": false,
        "description": "实体属性列表元素"
      },
      "EntityMemberItemDtoPageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityMemberItemDto"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EntityMemberUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "属性名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "属性注释内容",
            "nullable": true
          },
          "defaultValue": {
            "maxLength": 100,
            "type": "string",
            "description": "默认值，根据类型推断",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "isRequired": {
            "type": "boolean",
            "description": "是否必须",
            "nullable": true
          },
          "isEnum": {
            "type": "boolean",
            "description": "是否为枚举",
            "nullable": true
          },
          "isList": {
            "type": "boolean",
            "description": "是否为列表",
            "nullable": true
          },
          "isObject": {
            "type": "boolean",
            "description": "是否为自定义对象",
            "nullable": true
          },
          "canSet": {
            "type": "boolean",
            "description": "是否可赋值",
            "nullable": true
          },
          "needInit": {
            "type": "boolean",
            "description": "是否要初始化",
            "nullable": true
          },
          "dictionaryKeyType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "dictionaryValueType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberType"
          },
          "objectTypeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "entityModelId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "实体属性更新时请求结构"
      },
      "EntityModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "实体类名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "实体注释内容",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "codeExample": {
            "maxLength": 2000,
            "type": "string",
            "description": "代码示例",
            "nullable": true
          },
          "codeLanguage": {
            "$ref": "#/components/schemas/CodeLanguage"
          },
          "parentEntity": {
            "$ref": "#/components/schemas/EntityModel"
          },
          "childrenEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityModel"
            },
            "description": "直属子类",
            "nullable": true
          },
          "entityMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityMember"
            },
            "description": "包含的属性",
            "nullable": true
          },
          "entityLibrary": {
            "$ref": "#/components/schemas/EntityLibrary"
          }
        },
        "additionalProperties": false,
        "description": "实体模型类"
      },
      "EntityModelAddDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "实体类名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "实体注释内容",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "codeExample": {
            "maxLength": 2000,
            "type": "string",
            "description": "代码示例",
            "nullable": true
          },
          "codeLanguage": {
            "$ref": "#/components/schemas/CodeLanguage"
          },
          "parentEntityId": {
            "type": "string",
            "format": "uuid"
          },
          "entityLibraryId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "实体模型类添加时请求结构"
      },
      "EntityModelFilterDto": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBy": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "description": "排序",
            "nullable": true
          },
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "实体类名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "实体注释内容",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "parentEntityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "entityLibraryId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "实体模型类查询筛选"
      },
      "EntityModelItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "实体类名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "实体注释内容",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "codeLanguage": {
            "$ref": "#/components/schemas/CodeLanguage"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          }
        },
        "additionalProperties": false,
        "description": "实体模型类列表元素"
      },
      "EntityModelItemDtoPageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityModelItemDto"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EntityModelUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 60,
            "type": "string",
            "description": "实体类名",
            "nullable": true
          },
          "comment": {
            "maxLength": 300,
            "type": "string",
            "description": "实体注释内容",
            "nullable": true
          },
          "accessModifier": {
            "$ref": "#/components/schemas/AccessModifier"
          },
          "codeExample": {
            "maxLength": 2000,
            "type": "string",
            "description": "代码示例",
            "nullable": true
          },
          "codeLanguage": {
            "$ref": "#/components/schemas/CodeLanguage"
          },
          "entityLibraryId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "实体模型类更新时请求结构"
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "登录"
      },
      "MemberType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "description": "属性的类型",
        "format": "int32",
        "x-enumNames": [
          "Byte",
          "Short",
          "Int",
          "Long",
          "Double",
          "Float",
          "Decimal",
          "String",
          "Array",
          "List",
          "Dictionary",
          "Customer"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          },
          "name": {
            "maxLength": 30,
            "type": "string",
            "description": "角色显示名称",
            "nullable": true
          },
          "nameValue": {
            "type": "string",
            "description": "角色名，系统标识",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "是否系统内置,系统内置不可删除"
          },
          "icon": {
            "maxLength": 30,
            "type": "string",
            "description": "图标",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "角色表"
      },
      "RoleAddDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameValue": {
            "type": "string",
            "description": "角色名，系统标识",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "是否系统内置,系统内置不可删除"
          },
          "icon": {
            "maxLength": 30,
            "type": "string",
            "description": "图标",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "角色添加时请求结构"
      },
      "RoleFilterDto": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderBy": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean",
              "nullable": true
            },
            "description": "排序",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameValue": {
            "type": "string",
            "description": "角色名，系统标识",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "是否系统内置,系统内置不可删除",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "角色查询筛选"
      },
      "RoleItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameValue": {
            "type": "string",
            "description": "角色名，系统标识",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "是否系统内置,系统内置不可删除"
          },
          "icon": {
            "maxLength": 30,
            "type": "string",
            "description": "图标",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          }
        },
        "additionalProperties": false,
        "description": "角色列表元素"
      },
      "RoleItemDtoPageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleItemDto"
            },
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RoleUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameValue": {
            "type": "string",
            "description": "角色名，系统标识",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "是否系统内置,系统内置不可删除",
            "nullable": true
          },
          "icon": {
            "maxLength": 30,
            "type": "string",
            "description": "图标",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "角色更新时请求结构"
      },
      "SexType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "性别",
        "format": "int32",
        "x-enumNames": [
          "Male",
          "Female",
          "Else"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "软删除"
          },
          "userName": {
            "maxLength": 30,
            "type": "string",
            "description": "用户名",
            "nullable": true
          },
          "realName": {
            "maxLength": 30,
            "type": "string",
            "description": "真实姓名",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "passwordSalt": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastLoginTime": {
            "type": "string",
            "description": "最后登录时间",
            "format": "date-time",
            "nullable": true
          },
          "retryCount": {
            "type": "integer",
            "description": "密码重试次数",
            "format": "int32"
          },
          "avatar": {
            "maxLength": 200,
            "type": "string",
            "description": "头像url",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "nullable": true
          },
          "idNumber": {
            "maxLength": 18,
            "type": "string",
            "description": "身份证号",
            "nullable": true
          },
          "sex": {
            "$ref": "#/components/schemas/SexType"
          }
        },
        "additionalProperties": false,
        "description": "系统用户"
      }
    }
  }
}